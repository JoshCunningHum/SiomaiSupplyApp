/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package siomaisupplyapp.Frames;

import java.sql.Date;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import siomaisupplyapp.Entities.Adoption;
import siomaisupplyapp.Entities.Kitten;
import siomaisupplyapp.Entities.KittenList;
import siomaisupplyapp.SiomaiSupplyApp;

/**
 *
 * @author Josh
 */
public class AdminFrame extends javax.swing.JFrame {

   String username;
   DefaultListModel<String> listKittenModel, modAdopt, modUser, modKitty;
   KittenList active_kittens;
   
   KittenList avKitty, all;
   ArrayList<Adoption> adoptions;
   ArrayList<String> users;
   Kitten kittenOnAdoption;
   String adopterOnAdoption;
   Adoption selectedAdoption;
   
   boolean hasInitiated = false;
    
    /**
     * Creates new form AdminFrame
     */
     public AdminFrame(String user) {
        initComponents();
        hasInitiated = true;
        this.username = user;
        
        users = SiomaiSupplyApp.c.getAllAdopter();
        retrieveData();
    }

    public void retrieveData(){
        adoptions = SiomaiSupplyApp.c.queryAdoptions();
        all = SiomaiSupplyApp.c.queryKittensAll();
        
        // And Enable what needs to be enabled
        btnAdoptDelete.setEnabled(false);
        inpUserSearch.setEnabled(false);
        inpKittySearch.setEnabled(false);
        btnClrKitty.setEnabled(false);
        btnClrUser.setEnabled(false);
        btnExtendDays.setEnabled(false);
        btnAdoptEdit.setEnabled(false);
        
        // Delete all inputs
        if(modKitty != null) modKitty.clear();
        
        showUserList(users);
        showAdoptList(adoptions);
    }
    
    public void refreshKittenTab(){
        inpKittenSearch.setText("");
        setKittenList(SiomaiSupplyApp.c.queryKittensAll());
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHeader = new javax.swing.JPanel();
        btnLogOut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pnlBody = new javax.swing.JTabbedPane();
        pnlKittenManage = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        inpKittenSearch = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        inpID = new javax.swing.JTextField();
        inpName = new javax.swing.JTextField();
        inpBreed = new javax.swing.JTextField();
        inpBirth = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        inpDesc = new javax.swing.JTextArea();
        cmbStatus = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        output = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        inpAdoptSearch = new javax.swing.JTextField();
        btnClrAdopt = new javax.swing.JButton();
        inpUserSearch = new javax.swing.JTextField();
        btnClrUser = new javax.swing.JButton();
        inpKittySearch = new javax.swing.JTextField();
        btnClrKitty = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        btnAdoptEdit = new javax.swing.JButton();
        btnAdoptDelete = new javax.swing.JButton();
        inpAdoptID = new javax.swing.JTextField();
        inpKittyID = new javax.swing.JTextField();
        inpUsername = new javax.swing.JTextField();
        inpAdoptExpiree = new javax.swing.JTextField();
        cmbAdoptStatus = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        inpExtendDays = new javax.swing.JTextField();
        btnExtendDays = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(750, 50));

        pnlHeader.setBackground(new java.awt.Color(0, 51, 51));
        pnlHeader.setPreferredSize(new java.awt.Dimension(750, 50));

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PURRFECT MATCH");

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap(219, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 218, Short.MAX_VALUE)
                .addComponent(btnLogOut)
                .addContainerGap())
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(pnlHeader, java.awt.BorderLayout.PAGE_START);

        pnlBody.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pnlBodyStateChanged(evt);
            }
        });

        pnlKittenManage.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        pnlKittenManage.setLayout(new java.awt.BorderLayout(0, 5));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(150, 130));

        listKittenModel = new DefaultListModel<>();
        listKitten.setModel(listKittenModel);
        listKitten.getSelectionModel().addListSelectionListener(e -> {
            listKittenClick(e);
        });
        listKitten.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listKitten);

        pnlKittenManage.add(jScrollPane1, java.awt.BorderLayout.LINE_START);

        inpKittenSearch.setToolTipText("");
        inpKittenSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inpKittenSearchKeyReleased(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(inpKittenSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addGap(0, 512, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inpKittenSearch)
            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        pnlKittenManage.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Name");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Breed");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Birthdate");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Description");

        inpID.setEnabled(false);

        inpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpNameActionPerformed(evt);
            }
        });

        inpDesc.setColumns(20);
        inpDesc.setRows(5);
        jScrollPane2.setViewportView(inpDesc);

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AVAILABLE", "PROCESSING", "UNAVAILABLE" }));

        jLabel7.setText("Status: ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inpID, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(inpName)
                            .addComponent(inpBirth)
                            .addComponent(inpBreed))
                        .addGap(150, 150, 150)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(inpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(inpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inpBreed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(inpBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(70, 112, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)))
        );

        jPanel1.add(jPanel3);

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        output.setForeground(new java.awt.Color(255, 51, 51));
        output.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        output.setText(" ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreate))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 62, Short.MAX_VALUE)
                .addComponent(output)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)))
        );

        jPanel1.add(jPanel4);

        pnlKittenManage.add(jPanel1, java.awt.BorderLayout.CENTER);

        pnlBody.addTab("Kittens", pnlKittenManage);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel2.setLayout(new java.awt.BorderLayout(5, 5));

        btnClrAdopt.setText("❌");
        btnClrAdopt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        btnClrAdopt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClrAdoptActionPerformed(evt);
            }
        });

        inpUserSearch.setEnabled(false);
        inpUserSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inpUserSearchKeyReleased(evt);
            }
        });

        btnClrUser.setText("❌");
        btnClrUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        btnClrUser.setEnabled(false);
        btnClrUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClrUserActionPerformed(evt);
            }
        });

        inpKittySearch.setEnabled(false);
        inpKittySearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inpKittySearchKeyReleased(evt);
            }
        });

        btnClrKitty.setText("❌");
        btnClrKitty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        btnClrKitty.setEnabled(false);
        btnClrKitty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClrKittyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(inpAdoptSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClrAdopt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 322, Short.MAX_VALUE)
                .addComponent(inpUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClrUser, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inpKittySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClrKitty, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inpAdoptSearch)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(btnClrKitty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClrAdopt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClrUser, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(inpUserSearch)
            .addComponent(inpKittySearch)
        );

        jPanel2.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jPanel8.setLayout(new java.awt.BorderLayout(10, 0));

        modKitty = new DefaultListModel<>();
        lstKitty.setModel(modKitty);
        lstKitty.getSelectionModel().addListSelectionListener(e -> {
            listKittyClick(e);
        });
        lstKitty.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(lstKitty);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        jPanel8.add(jPanel6, java.awt.BorderLayout.LINE_END);

        jPanel9.setPreferredSize(new java.awt.Dimension(379, 379));
        jPanel9.setLayout(new java.awt.BorderLayout());

        btnAdoptEdit.setText("Edit");
        btnAdoptEdit.setEnabled(false);
        btnAdoptEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdoptEditActionPerformed(evt);
            }
        });

        btnAdoptDelete.setText("Delete");
        btnAdoptDelete.setEnabled(false);
        btnAdoptDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdoptDeleteActionPerformed(evt);
            }
        });

        inpAdoptID.setEditable(false);

        inpKittyID.setEditable(false);

        inpUsername.setEditable(false);

        inpAdoptExpiree.setEditable(false);

        cmbAdoptStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ongoing", "Successful", "Cancelled", "Returned" }));
        cmbAdoptStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAdoptStatusActionPerformed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("ID");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("kitten ID");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Adoptee");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Date Expiree");

        btnExtendDays.setText("Extend");
        btnExtendDays.setEnabled(false);
        btnExtendDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtendDaysActionPerformed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("Number of Days");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExtendDays, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inpExtendDays)
                    .addComponent(inpKittyID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inpAdoptID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(btnAdoptDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdoptEdit))
                    .addComponent(inpUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inpAdoptExpiree, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbAdoptStatus, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inpAdoptID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inpKittyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inpUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inpAdoptExpiree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbAdoptStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inpExtendDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExtendDays)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdoptDelete)
                    .addComponent(btnAdoptEdit))
                .addContainerGap())
        );

        jPanel9.add(jPanel10, java.awt.BorderLayout.CENTER);

        modUser = new DefaultListModel<>();
        lstUser.setModel(modUser);
        lstUser.getSelectionModel().addListSelectionListener(e -> {
            listUserClick(e);
        });
        lstUser.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(lstUser);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        jPanel9.add(jPanel14, java.awt.BorderLayout.LINE_END);

        jPanel8.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel8, java.awt.BorderLayout.CENTER);

        modAdopt = new DefaultListModel<>();
        lstAdopt.setModel(modAdopt);
        lstAdopt.getSelectionModel().addListSelectionListener(e -> {
            listAdoptClick(e);
        });
        lstAdopt.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(lstAdopt);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel11, java.awt.BorderLayout.LINE_START);

        pnlBody.addTab("Adoptions", jPanel2);

        getContentPane().add(pnlBody, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String getInput(String input){
        return getInput(input, false);
    }
    
    private Adoption adoptionAsInput(){
        Adoption res = new Adoption();
        
        String inputted_id = inpAdoptID.getText(),
               inputted_kitten_id = inpKittyID.getText(),
               adoptee = inpUsername.getText();
        
        if(inputted_id.isEmpty() || inputted_kitten_id.isEmpty() || adoptee.isEmpty()) return null;
        
        int status = cmbAdoptStatus.getSelectedIndex(),
            id = Integer.parseInt(inputted_id),
            kitten_id = Integer.parseInt(inputted_kitten_id);
        
        res.setId(id);
        res.setUsername(adoptee);
        res.setKitten_id(kitten_id);
        res.setStatus(status);
        
        return res;
    }
    
    private void showAvKittyList(Kitten current){
        // Get search string
        String searched = inpKittySearch.getText();
        
        // Filter according to search and pass it to be shown
        KittenList res = new KittenList(current);
        if(searched.isEmpty()) res.add(avKitty);
        else res.add(avKitty.filter(searched, "name"));
        
        showKittyList(res);
    }
    
    private void showKittyList(KittenList arr){
        modKitty.clear();
        for(Kitten k : arr.kittens){
            modKitty.addElement(String.format("[%d] %s", k.getId(), k.getName()));
        }
        // Always select the first
        if(arr.size() > 0) lstKitty.setSelectedIndex(0);
    }
    
    private void showAvAdopt(){
        // Get search query string
        String query = inpAdoptSearch.getText();
        
        ArrayList<Adoption> res = new ArrayList<>();
        if(query.isEmpty()) res.addAll(adoptions);
        else{
            for(Adoption a : adoptions){
                Kitten k = all.get(a.getKitten_id());
                String toCompareTo = String.format("[%d] %s-%s", a.getId(), a.getUsername(), k.getName());
                
                if(toCompareTo.contains(query)) res.add(a);
            }
        }
        
        // Update list
        showAdoptList(res);
    }
    
    private void showAvUser(){
        // Get first the search query
        String query = inpUserSearch.getText();
        
        ArrayList<String> res = new ArrayList<>();
        if(query.isEmpty()) res.addAll(users);
        else {
            for(String u : users){
                if(u.contains(query)) res.add(u);
            }
            // then also add current user on select if not included
            if(!adopterOnAdoption.contains(query)) res.add(0, adopterOnAdoption);
        }
        
        // Now show the list
        showUserList(res);
        
        // Select the current user
        if(!adopterOnAdoption.contains(query)) lstUser.setSelectedIndex(0);
        else{
            // find the index
            int index = 0;
            for(String u : res){
                if(u.equals(adopterOnAdoption)) break;
                index++;
            }
            lstUser.setSelectedIndex(index);
        }
        
        
    }
    
    private void showUserList(ArrayList<String> arr){
        modUser.clear();
        for(String username : arr){
            modUser.addElement(username);
        }
    }
    
    private void showAdoptList(ArrayList<Adoption> arr){
        modAdopt.clear();
        for(Adoption a : arr){
            Kitten k = all.get(a.getKitten_id());
            modAdopt.addElement(String.format("[%d] %s-%s", a.getId(), a.getUsername(), k.getName()));
        }
    }
    
    private void listAdoptClick(ListSelectionEvent ev){
        // Put values in the frame
        String char_comb = lstAdopt.getSelectedValue();
        
        if(char_comb == null) return;
        
        Pattern p = Pattern.compile("\\d+", Pattern.MULTILINE);
        
        Matcher matcher = p.matcher(char_comb);
        String match = "";
        
        if(matcher.find()){
            match = matcher.group(0);
            inpAdoptID.setText(match);
        }else return;
        
        int adopt_id = Integer.parseInt(match);
        
        // Put inputs
        inpAdoptID.setText(Integer.toString(adopt_id));
        
        Adoption target = null;
        for(Adoption a : adoptions){
            if(a.getId() == adopt_id){
                target = a;
                break;
            }
        }
        
        inpKittyID.setText(Integer.toString(target.getKitten_id()));
        inpUsername.setText(target.getUsername());
        inpAdoptExpiree.setText(target.getDate_expire().toString());
        cmbAdoptStatus.setSelectedIndex(target.getStatus());
        
        // Get Current Adopting Kitty and Adopter
        kittenOnAdoption = all.get(target.getKitten_id());
        adopterOnAdoption = target.getUsername();
        selectedAdoption = target;
        
        // Update showing kitten list
        avKitty = all.getAllAvailable();
        showAvKittyList(kittenOnAdoption);
        
        // Auto Select Adopting Adopter
        int adopterIndex = 0;
        for(String adopter : users){
            if(adopter.equals(target.getUsername())) break;
            adopterIndex++;
        }
        if(adopterIndex < users.size()) lstUser.setSelectedIndex(adopterIndex);
        
        // Disable Edit Button
        btnAdoptEdit.setEnabled(false);
        // And Enable what needs to be enabled
        btnAdoptDelete.setEnabled(true);
        inpUserSearch.setEnabled(true);
        inpKittySearch.setEnabled(true);
        btnClrKitty.setEnabled(true);
        btnClrUser.setEnabled(true);
        btnExtendDays.setEnabled(true);
        cmbAdoptStatus.setEnabled(true);
    }
    
    private void listUserClick(ListSelectionEvent ev){
        btnAdoptEdit.setEnabled(true);
        cmbAdoptStatus.setEnabled(false);
        String selected = lstUser.getSelectedValue();
        
        if(selected == null) return;
        
        inpUsername.setText(selected);
        adopterOnAdoption = selected;
    }
    
    private void listKittyClick(ListSelectionEvent ev){
        btnAdoptEdit.setEnabled(true);
        cmbAdoptStatus.setEnabled(false);
        
        String char_comb = lstKitty.getSelectedValue();
        
        if(char_comb == null) return;
        
        Pattern p = Pattern.compile("\\d+", Pattern.MULTILINE);
        
        Matcher matcher = p.matcher(char_comb);
        String match = "";
        
        if(matcher.find()){
            match = matcher.group(0);
        }else return;
        
        int kitten_id = Integer.parseInt(match);
        
        inpKittyID.setText(Integer.toString(kitten_id));
        kittenOnAdoption = all.get(kitten_id);
    }
    
    private String getInput(String input, boolean nullable){
        JTextField target = null;
        
        switch(input){
            case "name": 
                target = inpName;
                break;
            case "breed":
                target = inpBreed;
                break;
            case "birth":
                target = inpBirth;
                break;
            case "id":
                target = inpID;
                break;
        }
        
        String value = target.getText();
        
        if(!nullable && value.equals("")){
            output.setText("Field: Inp" + input.substring(0, 1).toUpperCase() + input.substring(1) + " is required!");
            return null;
        }
        else return value;
    }
    
    private Kitten getInputAsKitten(){
        String id = getInput("id", true),
               name = getInput("name", false),
               breed = getInput("breed", true),
               birth = getInput("birth", false),
               desc = inpDesc.getText();
        
        int status = cmbStatus.getSelectedIndex();
        
        if(name == null || birth == null) return null;
        
        Kitten k = new Kitten();
        if(!id.equals("")) k.setId(Integer.parseInt(id));
        k.setName(name);
        k.setStatus(status);
        if(!breed.equals("")) k.setBreed(breed);
        try{
            Date parseDate = Date.valueOf(birth);
            k.setBirthdate(parseDate);
        }catch (IllegalArgumentException e){
            output.setText("Wrong date format. Use (YYYY-MM-DD)");
            return null;
        }
        
        if(!desc.equals("")) k.setDescription(desc);
        
        return k;
    }
    
    
    private void openLogin(){
        JFrame lf = new LoginFrame();
        lf.setLocationRelativeTo(this);
        lf.setVisible(true);
        this.dispose();
    }
    
    
    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        openLogin();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        Kitten k = getInputAsKitten();
        
        if(k == null) return;
        
        k.setStatus(Kitten.STATUS.AVAILABLE.ordinal());
        
        SiomaiSupplyApp.c.addKitten(k);
        
        setKittenList(SiomaiSupplyApp.c.queryKittensAll());
    }//GEN-LAST:event_btnCreateActionPerformed

    private void inpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpNameActionPerformed

    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String displayed_id = getInput("id") ;
        
        if(displayed_id == null) return;
        
        int id = Integer.parseInt(displayed_id);
        
        // find the original kitten
        Kitten original = active_kittens.get(id),
               updated = getInputAsKitten();
        
        // Generate input map and update the kitten in the database
        SiomaiSupplyApp.c.updateKitten(original.genUpdateMap(updated));
        original.copy(updated);
        setKittenList(active_kittens);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String inpId = getInput("id");
        
        if(inpId == null){
            output.setText("Please select a kitten to remove");
            return;
        }
        
        int id = Integer.parseInt(inpId);
        SiomaiSupplyApp.c.removeKitten(id);
        
        // refresh list
        active_kittens.remove(id);
        setKittenList(active_kittens);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        inpKittenSearch.setText("");
        setShowingList(active_kittens);
    }//GEN-LAST:event_btnClearActionPerformed

    private void inpKittenSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inpKittenSearchKeyReleased
        // TODO add your handling code here:
        String input = inpKittenSearch.getText();
        
        if(input.isEmpty()){
            setKittenList(active_kittens);
        }
        
        // Filter the active kitten search
        KittenList res = active_kittens.filter(input, "name");
        res.add(active_kittens.filter(input, "breed"));
        
        setShowingList(res);
    }//GEN-LAST:event_inpKittenSearchKeyReleased

    private void btnClrAdoptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClrAdoptActionPerformed
        // TODO add your handling code here:
        inpAdoptSearch.setText("");
    }//GEN-LAST:event_btnClrAdoptActionPerformed

    private void btnClrUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClrUserActionPerformed
        // TODO add your handling code here:
        inpUserSearch.setText("");
        showAvUser();
    }//GEN-LAST:event_btnClrUserActionPerformed

    private void btnClrKittyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClrKittyActionPerformed
        // TODO add your handling code here:
        inpKittySearch.setText("");
        showAvKittyList(kittenOnAdoption);
    }//GEN-LAST:event_btnClrKittyActionPerformed

    private void btnAdoptEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdoptEditActionPerformed
        // TODO add your handling code here:
        Adoption after = adoptionAsInput(),
                 before = selectedAdoption;
        
        if(cmbAdoptStatus.getSelectedIndex() != Adoption.STATUS.ONGOING.ordinal()){
            
            // If status is changed, do the operations
            switch(cmbAdoptStatus.getSelectedIndex()){
                case 1: // successful
                    SiomaiSupplyApp.c.verifyAdoption(before);
                    break;
                case 2: // cancel
                    SiomaiSupplyApp.c.cancelAdoption(before);
                    break;
                case 3: // returned
                    SiomaiSupplyApp.c.returnAdoption(before);
                    break;
            }
            
            retrieveData();
            return;
        }
        
        boolean res = SiomaiSupplyApp.c.updateAdoption(before, after);
        
        if(!res) return;
        
        // Do update of the frame
        retrieveData();
    }//GEN-LAST:event_btnAdoptEditActionPerformed

    private void cmbAdoptStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAdoptStatusActionPerformed
        // TODO add your handling code here:
        
        // Set edit button to enabled
        btnAdoptEdit.setEnabled(true);
    }//GEN-LAST:event_cmbAdoptStatusActionPerformed

    private void inpUserSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inpUserSearchKeyReleased
        // TODO add your handling code here:
        showAvUser();
    }//GEN-LAST:event_inpUserSearchKeyReleased

    private void inpKittySearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inpKittySearchKeyReleased
        // TODO add your handling code here:
        
        showAvKittyList(kittenOnAdoption);
    }//GEN-LAST:event_inpKittySearchKeyReleased

    private void btnAdoptDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdoptDeleteActionPerformed
        // TODO add your handling code here:
        boolean res = SiomaiSupplyApp.c.cancelAdoption(selectedAdoption);
        
        if(!res) return;
        
        // Do update of the frame
        retrieveData();
    }//GEN-LAST:event_btnAdoptDeleteActionPerformed

    private void pnlBodyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pnlBodyStateChanged
        // TODO add your handling code here:
        if(!hasInitiated) return;
        
        retrieveData();
        refreshKittenTab();
    }//GEN-LAST:event_pnlBodyStateChanged

    private void btnExtendDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtendDaysActionPerformed
        // TODO add your handling code here:
        String inputted = inpExtendDays.getText();
        
        if(inputted.isEmpty()){
            inpExtendDays.setText("");
            return;
        }
        
        int extension = 0;
        
        try {
             extension = Integer.parseInt(inputted);
             
             if(extension < 1) throw new Exception();
        }catch(Exception e){
            inpExtendDays.setText("");
            return;
        }
        
        boolean res = SiomaiSupplyApp.c.extendAdoption(selectedAdoption, extension);
        
        if(res) retrieveData();
    }//GEN-LAST:event_btnExtendDaysActionPerformed

    public void setKittenList(KittenList list){
        active_kittens = list;
        setShowingList(active_kittens);
        inpKittenSearch.setText("");
    }
    
    public void setShowingList(KittenList list){
        listKittenModel.clear();
        for(Kitten k : list.kittens){
            listKittenModel.addElement(k.getId() + " [" + k.getName() + "]");
        }
        
    }
    
    private void listKittenClick(ListSelectionEvent e){
        String char_comb = listKitten.getSelectedValue();
        
        if(char_comb == null) return;
        
        int id = Integer.parseInt(char_comb.replaceAll("[^0-9]", ""));
        
        // event when clicking on a list item here
        Kitten s = active_kittens.get(id);
        if(s == null) return;
        
        inpID.setText(s.getId() + "");
        inpName.setText(s.getName());
        inpBreed.setText(s.getBreed());
        inpBirth.setText(s.getBirthdate().toString());
        inpDesc.setText(s.getDescription());
        cmbStatus.setSelectedIndex(s.getStatus());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminFrame("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdoptDelete;
    private javax.swing.JButton btnAdoptEdit;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClrAdopt;
    private javax.swing.JButton btnClrKitty;
    private javax.swing.JButton btnClrUser;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExtendDays;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbAdoptStatus;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JTextField inpAdoptExpiree;
    private javax.swing.JTextField inpAdoptID;
    private javax.swing.JTextField inpAdoptSearch;
    private javax.swing.JTextField inpBirth;
    private javax.swing.JTextField inpBreed;
    private javax.swing.JTextArea inpDesc;
    private javax.swing.JTextField inpExtendDays;
    private javax.swing.JTextField inpID;
    private javax.swing.JTextField inpKittenSearch;
    private javax.swing.JTextField inpKittyID;
    private javax.swing.JTextField inpKittySearch;
    private javax.swing.JTextField inpName;
    private javax.swing.JTextField inpUserSearch;
    private javax.swing.JTextField inpUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private final javax.swing.JList<String> listKitten = new javax.swing.JList<String>();
    private final javax.swing.JList<String> lstAdopt = new javax.swing.JList<>();
    private final javax.swing.JList<String> lstKitty = new javax.swing.JList<>();
    private final javax.swing.JList<String> lstUser = new javax.swing.JList<>();
    private javax.swing.JLabel output;
    private javax.swing.JTabbedPane pnlBody;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlKittenManage;
    // End of variables declaration//GEN-END:variables
}
